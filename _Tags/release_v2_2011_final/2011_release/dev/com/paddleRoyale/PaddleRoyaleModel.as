package paddleRoyale{	import flash.events.EventDispatcher;	import paddleRoyale.PaddleEvents;	public class PaddleRoyaleModel extends EventDispatcher	{		private static var _instance:PaddleRoyaleModel;		private var _matchList:Array;		private var _playerNameLookupList:Array;		private var _tableClipsArray:Array;		private var _gamePlayedToggleArray:Array;		private var _matchXML:XML;		private var _playerXML:XML;		public function PaddleRoyaleModel(singleton:SingletonEnforcer)		{			_gamePlayedToggleArray = new Array();			_playerNameLookupList = new Array();			_tableClipsArray = new Array();			_matchList = new Array();					}		public static function getInstance():PaddleRoyaleModel		{			if (_instance == null)			{				_instance = new PaddleRoyaleModel( new SingletonEnforcer() );			}			return _instance;		}		public function get gamePlayedToggleArray():Array{				return _gamePlayedToggleArray;			}		public function set gamePlayedToggleArray( val ):void{  			_gamePlayedToggleArray.push( val ); 		}						public function set tableClipsArrayWhole( val:Array ){ _tableClipsArray = val; }		public function get tableClipsArray():Array{		return _tableClipsArray;	}		public function set tableClipsArray( val ):void{	_tableClipsArray.push( val ) };			public function set playerNameListWhole( val:Array ){ _playerNameLookupList = val; }		public function get playerNameList():Array{		return _playerNameLookupList;	}		public function set playerNameList( val ):void{	_playerNameLookupList.push( val );	}		public function get playerXML():XML{		return _playerXML;	}		public function set playerXML( val:XML ):void{	_playerXML = val;	}		public function set matchListArrayWhole( val:Array ){ _matchList = val; }		public function get matchListArray():Array{		return _matchList;	}		public function set matchListArray( val:Array ):void{	_matchList.push( val );	}		public function get matchXML():XML{		return _matchXML;	}		public function set matchXML( val:XML ):void{	_matchXML = val;	}	}}//SINGLETON ENFROCER CLASSclass SingletonEnforcer{;	public function SingletonEnforcer()	{	}}