package paddleRoyale{	import soulwire.display.PaperSprite;	import paddleRoyale.XMLHandler;	import paddleRoyale.PaddleRoyaleModel;	import paddleRoyale.PaddleUtilClass;	import flash.display.MovieClip;	import flash.geom.Point;	import com.greensock.TweenMax;	import com.greensock.easing.*;	import flash.events.MouseEvent;	public class TableLayoutClass extends MovieClip	{		private var _inst:MovieClip;		private var _across:uint = 4;		private var _down:uint = 2;		private var _tableDelay:Number = .25;		private var _row:uint;		private var _col:uint;		private var _spacing:int = 50;		private var _xmlObj:XMLHandler;		private var _model:PaddleRoyaleModel;		private var _utils:PaddleUtilClass;		//public var _tableArray:Array;		public var tableContainer:MovieClip;		public function TableLayoutClass( inst)		{			_inst = inst;			_model = PaddleRoyaleModel.getInstance();			_utils = new PaddleUtilClass();			_xmlObj = XMLHandler.getInstance();		}		public function drawTables():void		{			tableContainer = new MovieClip();			_inst.addChild(tableContainer);			for (var i=0; i< _across * _down; i++)			{				//***init vars***				var table = new TableClip();				table.tableFront.tableID.text = i + 1;				TweenMax.to(table.tableFront.colorBG, 0, {tint:0x1d1d1d});				table.tableBack.tableBackInput.text = _model.matchListArray[i].matchID;				_row = i % _across;				_col = Math.floor( i / _across);				table.x = table.width / 2 + (_row * (table.width + _spacing));				table.y = (_col * (table.height + (_spacing - 20)));				table.point = new Point(table.x,table.y);				table.id = i + 1;				table.name = "tableDisplayContainer";				table.visible=false;				//tableDisplayClass				table.updateInformation( _model.matchListArray[i].matchID );				//table.updateInformation( _model.matchListArray[i].matchID );												tableContainer.addChild(table);				_model.tableClipsArray.push(table);							}			tableContainer.x = ( _inst.stage.stageWidth / 2 ) - (tableContainer.width / 2);			tableContainer.y = table.height + 30;			showTables();		}				private function showTables(){			for(var i=0; i<_model.tableClipsArray.length/2; i++)			{				_model.tableClipsArray[i].scaleX=_model.tableClipsArray[i].scaleY=0;				_model.tableClipsArray[i].visible=true;				TweenMax.to(_model.tableClipsArray[i], .5, {scaleX:1, scaleY:1, delay:i*_tableDelay});			}						var reverseCount:uint=0;			for(var j=_model.tableClipsArray.length-1; j>=_model.tableClipsArray.length/2; j--)			{				_model.tableClipsArray[j].scaleX=_model.tableClipsArray[j].scaleY=0;				_model.tableClipsArray[j].visible=true;				TweenMax.to(_model.tableClipsArray[j], .5, {scaleX:1, scaleY:1,  delay: ( reverseCount ) * _tableDelay});				reverseCount++;			}		}	}}